// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  name     String
  email    String   @unique
  password String
  role     Role     @default(ATTENDANT)
  tickets  Ticket[] // Relacionamento com os tickets
}

model Ticket {
  id            String       @id @default(uuid())
  tag           Int          @default(autoincrement())
  title         String
  description   String?
  userId        String
  hasContact    Boolean?
  contactId     String?
  reasonId      String
  veichleId     String
  statusId      String
  estimatedTime DateTime //sempre s√£o 3 dias uteis
  status        Status       @relation(fields: [statusId], references: [id])
  veichle       Veichle      @relation(fields: [veichleId], references: [id])
  reason        TicketReason @relation(fields: [reasonId], references: [id])
  user          User         @relation(fields: [userId], references: [id])
  contact       Contact?     @relation(fields: [contactId], references: [id])
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Status {
  id     String   @id @default(uuid())
  name   String
  Ticket Ticket[]
}

model Contact {
  id       String   @id @default(uuid())
  typeName String
  Ticket   Ticket[]
}

model TicketReason {
  id          String   @id @default(uuid())
  reason      String
  description String
  Ticket      Ticket[]
}

model Veichle {
  id     String   @id @default(uuid())
  plate  String
  model  String
  color  String
  Ticket Ticket[]
}

enum Role {
  ADMIN
  ATTENDANT
}
